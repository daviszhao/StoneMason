
package io.github.daviszhao.stonemason.db.user;


import io.github.daviszhao.stonemason.db.user.tables.UserTable;
import io.github.daviszhao.stonemason.db.user.tables.records.UserRecord;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>user</code>
 * schema
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<UserRecord> KEY_T_USER_PRIMARY = UniqueKeys0.KEY_T_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_T_USER_UK_USER_USERNAME = UniqueKeys0.KEY_T_USER_UK_USER_USERNAME;
    public static final UniqueKey<UserRecord> KEY_T_USER_UK_USER_SALT = UniqueKeys0.KEY_T_USER_UK_USER_SALT;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(UserTable.USER, UserTable.USER.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<UserRecord> KEY_T_USER_PRIMARY = createUniqueKey(UserTable.USER, "KEY_t_user_PRIMARY", UserTable.USER.ID);
        public static final UniqueKey<UserRecord> KEY_T_USER_UK_USER_USERNAME = createUniqueKey(UserTable.USER, "KEY_t_user_UK_USER_USERNAME", UserTable.USER.USERNAME);
        public static final UniqueKey<UserRecord> KEY_T_USER_UK_USER_SALT = createUniqueKey(UserTable.USER, "KEY_t_user_UK_USER_SALT", UserTable.USER.SALT);
    }
}
