package io.github.daviszhao.stonemason.models.event;


import com.fasterxml.jackson.annotation.JsonFormat;
import io.github.daviszhao.stonemason.busEvent.constants.AskEventStatus;
import io.github.daviszhao.stonemason.models.base.BaseModel;
import lombok.*;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;
import java.util.List;

import static java.util.Arrays.asList;
import static java.util.stream.Collectors.joining;


@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Setter
@Getter
@NoArgsConstructor
@ToString
@EqualsAndHashCode(callSuper = false)
public class EventWatch extends BaseModel {

    private static final long serialVersionUID = -1063085806;

    @NotNull
    private Integer id;
    @Size(max = 65535)
    private String extraparams;
    @Size(max = 255)
    private String askeventids;
    @Size(max = 255)
    private String callbackclass;
    private boolean united;
    @Size(max = 20)
    private AskEventStatus askeventstatus;
    @JsonFormat(pattern = DATETIME_FORMAT)
    private LocalDateTime timeouttime;


    public EventWatch(EventWatch value) {
        this.id = value.id;
        this.extraparams = value.extraparams;
        this.askeventids = value.askeventids;
        this.callbackclass = value.callbackclass;
        this.united = value.united;
        this.askeventstatus = value.askeventstatus;
        this.timeouttime = value.timeouttime;
        this.setVersion(value.getVersion());
    }

    public List<String> getAskEventIdList() {
        return asList(askeventids.split(","));
    }

    public void setAskEventIdList(final List<String> list) {
        setAskeventids(list.stream().collect(joining(",")));
    }
}
