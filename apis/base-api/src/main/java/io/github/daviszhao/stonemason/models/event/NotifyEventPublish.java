package io.github.daviszhao.stonemason.models.event;


import io.github.daviszhao.stonemason.busEvent.constants.EventCategory;
import io.github.daviszhao.stonemason.busEvent.constants.ProcessStatus;
import io.github.daviszhao.stonemason.busEvent.payloads.EventPayload;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.annotation.Generated;
import java.time.LocalDateTime;


@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Setter
@Getter
@NoArgsConstructor
//@ToString
@EqualsAndHashCode(callSuper = false)
public class NotifyEventPublish extends AbstractEventPublish {

    private static final long serialVersionUID = 700733040;


    public NotifyEventPublish(NotifyEventPublish value) {
        this.setId(value.getId());
        this.setPayload(value.getPayload());
        this.setStatus(value.getStatus());
        this.setEventid(value.getEventid());
        this.setVersion(value.getVersion());
        this.setEventtype(value.getEventtype());
        this.setCreateTime(value.getCreateTime());
        this.setUpdateTime(value.getUpdateTime());
    }

    public NotifyEventPublish(String type, EventPayload payload) {
        super(null, payload, ProcessStatus.NEW, null, type, LocalDateTime.now(), null);
    }

    @Override
    public EventCategory getEventCategory() {
        return EventCategory.NOTIFY;
    }
}
