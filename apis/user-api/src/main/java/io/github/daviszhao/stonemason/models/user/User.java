package io.github.daviszhao.stonemason.models.user;


import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.github.daviszhao.stonemason.models.base.BaseModel;
import lombok.*;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;
import java.util.UUID;

import static org.apache.commons.codec.digest.DigestUtils.md5Hex;


/**
 * 用户表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Setter
@Getter
@NoArgsConstructor
@AllArgsConstructor
@ToString
@EqualsAndHashCode(callSuper = false)
public class User extends BaseModel {

    private static final long serialVersionUID = 902957026;

    @NotNull
    private Integer id;

    @NotNull
    @Size(max = 50)
    private String username;
    @JsonIgnore

    @NotNull
    @Size(max = 50)
    private String password;
    @NotNull
    @Size(max = 100)
    private String salt;
    private Boolean locked;
    @JsonFormat(pattern = DATETIME_FORMAT)
    @NotNull
    private LocalDateTime createtime;


    public User(User value) {
        this.id = value.id;
        this.username = value.username;
        this.password = value.password;
        this.salt = value.salt;
        this.locked = value.locked;
        this.createtime = value.createtime;
        this.setVersion(value.getVersion());
    }

    public User(String userName, String password) {
        this.username = username;
        this.password = password;
        this.salt = UUID.randomUUID().toString();
        this.createtime = LocalDateTime.now();
        setVersion(0);
    }

    public static String encryptPassword(String password, String salt) {
        return md5Hex(md5Hex(password + salt) + salt);
    }

}
