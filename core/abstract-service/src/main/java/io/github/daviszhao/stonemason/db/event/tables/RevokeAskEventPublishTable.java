/*
 * This file is generated by jOOQ.
 */
package io.github.daviszhao.stonemason.db.event.tables;


import io.github.daviszhao.stonemason.busEvent.constants.ProcessStatus;
import io.github.daviszhao.stonemason.db.event.Keys;
import io.github.daviszhao.stonemason.db.event.tables.records.RevokeAskEventPublishRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.EnumConverter;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RevokeAskEventPublishTable extends TableImpl<RevokeAskEventPublishRecord> {

    /**
     * The reference instance of <code>user.t_revoke_ask_event_publish</code>
     */
    public static final RevokeAskEventPublishTable REVOKE_ASK_EVENT_PUBLISH = new RevokeAskEventPublishTable();
    private static final long serialVersionUID = -468175954;
    /**
     * The column <code>user.t_revoke_ask_event_publish.id</code>.
     */
    public final TableField<RevokeAskEventPublishRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>user.t_revoke_ask_event_publish.payload</code>.
     */
    public final TableField<RevokeAskEventPublishRecord, String> PAYLOAD = createField("payload", org.jooq.impl.SQLDataType.CLOB, this, "");
    /**
     * The column <code>user.t_revoke_ask_event_publish.status</code>. 'NEW','PROCESSED','IGNORE'
     */
    public final TableField<RevokeAskEventPublishRecord, ProcessStatus> STATUS = createField("status", SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(DSL.inline("NEW", SQLDataType.VARCHAR)), this, "'NEW','PROCESSED','IGNORE'", new EnumConverter<>(String.class, ProcessStatus.class));
    /**
     * The column <code>user.t_revoke_ask_event_publish.eventId</code>.
     */
    public final TableField<RevokeAskEventPublishRecord, String> EVENTID = createField("eventId", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");
    /**
     * The column <code>user.t_revoke_ask_event_publish.askEventId</code>.
     */
    public final TableField<RevokeAskEventPublishRecord, String> ASKEVENTID = createField("askEventId", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");
    /**
     * The column <code>user.t_revoke_ask_event_publish.version</code>.
     */
    public final TableField<RevokeAskEventPublishRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");
    /**
     * The column <code>user.t_revoke_ask_event_publish.eventType</code>.
     */
    public final TableField<RevokeAskEventPublishRecord, String> EVENTTYPE = createField("eventType", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");
    public final TableField<RevokeAskEventPublishRecord, LocalDateTime> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");
    public final TableField<RevokeAskEventPublishRecord, LocalDateTime> UPDATETIME = createField("updateTime", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>user.t_revoke_ask_event_publish</code> table reference
     */
    public RevokeAskEventPublishTable() {
        this("t_revoke_ask_event_publish", null);
    }

    /**
     * Create an aliased <code>user.t_revoke_ask_event_publish</code> table reference
     */
    public RevokeAskEventPublishTable(String alias) {
        this(alias, REVOKE_ASK_EVENT_PUBLISH);
    }

    private RevokeAskEventPublishTable(String alias, Table<RevokeAskEventPublishRecord> aliased) {
        this(alias, aliased, null);
    }

    private RevokeAskEventPublishTable(String alias, Table<RevokeAskEventPublishRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this eventType
     */
    @Override
    public Class<RevokeAskEventPublishRecord> getRecordType() {
        return RevokeAskEventPublishRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RevokeAskEventPublishRecord, Integer> getIdentity() {
        return Keys.IDENTITY_revokeAskEventPublish;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RevokeAskEventPublishRecord> getPrimaryKey() {
        return Keys.KEY_T_REVOKE_ASK_EVENT_PUBLISH_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RevokeAskEventPublishRecord>> getKeys() {
        return Arrays.<UniqueKey<RevokeAskEventPublishRecord>>asList(Keys.KEY_T_REVOKE_ASK_EVENT_PUBLISH_PRIMARY, Keys.KEY_T_REVOKE_ASK_EVENT_PUBLISH_UK_REVOKEASK__PUBLISH_EVENTID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RevokeAskEventPublishTable as(String alias) {
        return new RevokeAskEventPublishTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RevokeAskEventPublishTable rename(String name) {
        return new RevokeAskEventPublishTable(name, null);
    }

    @Override
    public TableField<RevokeAskEventPublishRecord, ?> getRecordVersion() {
        return VERSION;
    }

    @Override
    public TableField<RevokeAskEventPublishRecord, ?> getRecordTimestamp() {
        return UPDATETIME;
    }
}
