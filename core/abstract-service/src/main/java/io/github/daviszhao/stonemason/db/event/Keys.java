/*
 * This file is generated by jOOQ.
 */
package io.github.daviszhao.stonemason.db.event;


import io.github.daviszhao.stonemason.db.event.tables.*;
import io.github.daviszhao.stonemason.db.event.tables.records.*;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>user</code>
 * schema
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AskRequstEventPublishRecord, Integer> IDENTITY_askRequstEventPublish = Identities0.IDENTITY_askRequstEventPublish;
    public static final Identity<AskResponseEventPublishRecord, Integer> IDENTITY_askResponseEventPublish = Identities0.IDENTITY_askResponseEventPublish;
    public static final Identity<EventProcessRecord, Integer> IDENTITY_eventProcess = Identities0.IDENTITY_eventProcess;
    public static final Identity<EventWatchRecord, Integer> IDENTITY_eventWatch = Identities0.IDENTITY_eventWatch;
    public static final Identity<EventWatchProcessRecord, Integer> IDENTITY_eventWatchProcess = Identities0.IDENTITY_eventWatchProcess;
    public static final Identity<NotifyEventPublishRecord, Integer> IDENTITY_notifyEventPublish = Identities0.IDENTITY_notifyEventPublish;
    public static final Identity<RevokeAskEventPublishRecord, Integer> IDENTITY_revokeAskEventPublish = Identities0.IDENTITY_revokeAskEventPublish;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AskRequstEventPublishRecord> KEY_T_ASK_REQUST_EVENT_PUBLISH_PRIMARY = UniqueKeys0.KEY_T_ASK_REQUST_EVENT_PUBLISH_PRIMARY;
    public static final UniqueKey<AskRequstEventPublishRecord> KEY_T_ASK_REQUST_EVENT_PUBLISH_UK_ASKREQ__PUBLISH_EVENTID = UniqueKeys0.KEY_T_ASK_REQUST_EVENT_PUBLISH_UK_ASKREQ__PUBLISH_EVENTID;
    public static final UniqueKey<AskResponseEventPublishRecord> KEY_T_ASK_RESPONSE_EVENT_PUBLISH_PRIMARY = UniqueKeys0.KEY_T_ASK_RESPONSE_EVENT_PUBLISH_PRIMARY;
    public static final UniqueKey<AskResponseEventPublishRecord> KEY_T_ASK_RESPONSE_EVENT_PUBLISH_UK_ASKRESP__PUBLISH_EVENTID = UniqueKeys0.KEY_T_ASK_RESPONSE_EVENT_PUBLISH_UK_ASKRESP__PUBLISH_EVENTID;
    public static final UniqueKey<EventProcessRecord> KEY_T_EVENT_PROCESS_PRIMARY = UniqueKeys0.KEY_T_EVENT_PROCESS_PRIMARY;
    public static final UniqueKey<EventProcessRecord> KEY_T_EVENT_PROCESS_EVENTID = UniqueKeys0.KEY_T_EVENT_PROCESS_EVENTID;
    public static final UniqueKey<EventWatchRecord> KEY_T_EVENT_WATCH_PRIMARY = UniqueKeys0.KEY_T_EVENT_WATCH_PRIMARY;
    public static final UniqueKey<EventWatchProcessRecord> KEY_T_EVENT_WATCH_PROCESS_PRIMARY = UniqueKeys0.KEY_T_EVENT_WATCH_PROCESS_PRIMARY;
    public static final UniqueKey<NotifyEventPublishRecord> KEY_T_NOTIFY_EVENT_PUBLISH_PRIMARY = UniqueKeys0.KEY_T_NOTIFY_EVENT_PUBLISH_PRIMARY;
    public static final UniqueKey<NotifyEventPublishRecord> KEY_T_NOTIFY_EVENT_PUBLISH_UK_NOTIFY__PUBLISH_EVENTID = UniqueKeys0.KEY_T_NOTIFY_EVENT_PUBLISH_UK_NOTIFY__PUBLISH_EVENTID;
    public static final UniqueKey<RevokeAskEventPublishRecord> KEY_T_REVOKE_ASK_EVENT_PUBLISH_PRIMARY = UniqueKeys0.KEY_T_REVOKE_ASK_EVENT_PUBLISH_PRIMARY;
    public static final UniqueKey<RevokeAskEventPublishRecord> KEY_T_REVOKE_ASK_EVENT_PUBLISH_UK_REVOKEASK__PUBLISH_EVENTID = UniqueKeys0.KEY_T_REVOKE_ASK_EVENT_PUBLISH_UK_REVOKEASK__PUBLISH_EVENTID;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AskRequstEventPublishRecord, Integer> IDENTITY_askRequstEventPublish = createIdentity(AskRequstEventPublishTable.askRequstEventPublish, AskRequstEventPublishTable.askRequstEventPublish.ID);
        public static Identity<AskResponseEventPublishRecord, Integer> IDENTITY_askResponseEventPublish = createIdentity(AskResponseEventPublishTable.askResponseEventPublish, AskResponseEventPublishTable.askResponseEventPublish.ID);
        public static Identity<EventProcessRecord, Integer> IDENTITY_eventProcess = createIdentity(EventProcessTable.eventProcess, EventProcessTable.eventProcess.ID);
        public static Identity<EventWatchRecord, Integer> IDENTITY_eventWatch = createIdentity(EventWatchTable.eventWatch, EventWatchTable.eventWatch.ID);
        public static Identity<EventWatchProcessRecord, Integer> IDENTITY_eventWatchProcess = createIdentity(EventWatchProcessTable.eventWatchProcess, EventWatchProcessTable.eventWatchProcess.ID);
        public static Identity<NotifyEventPublishRecord, Integer> IDENTITY_notifyEventPublish = createIdentity(NotifyEventPublishTable.notifyEventPublish, NotifyEventPublishTable.notifyEventPublish.ID);
        public static Identity<RevokeAskEventPublishRecord, Integer> IDENTITY_revokeAskEventPublish = createIdentity(RevokeAskEventPublishTable.revokeAskEventPublish, RevokeAskEventPublishTable.revokeAskEventPublish.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AskRequstEventPublishRecord> KEY_T_ASK_REQUST_EVENT_PUBLISH_PRIMARY = createUniqueKey(AskRequstEventPublishTable.askRequstEventPublish, "KEY_t_ask_requst_event_publish_PRIMARY", AskRequstEventPublishTable.askRequstEventPublish.ID);
        public static final UniqueKey<AskRequstEventPublishRecord> KEY_T_ASK_REQUST_EVENT_PUBLISH_UK_ASKREQ__PUBLISH_EVENTID = createUniqueKey(AskRequstEventPublishTable.askRequstEventPublish, "KEY_t_ask_requst_event_publish_UK_ASKREQ__PUBLISH_EVENTID", AskRequstEventPublishTable.askRequstEventPublish.EVENTID);
        public static final UniqueKey<AskResponseEventPublishRecord> KEY_T_ASK_RESPONSE_EVENT_PUBLISH_PRIMARY = createUniqueKey(AskResponseEventPublishTable.askResponseEventPublish, "KEY_t_ask_response_event_publish_PRIMARY", AskResponseEventPublishTable.askResponseEventPublish.ID);
        public static final UniqueKey<AskResponseEventPublishRecord> KEY_T_ASK_RESPONSE_EVENT_PUBLISH_UK_ASKRESP__PUBLISH_EVENTID = createUniqueKey(AskResponseEventPublishTable.askResponseEventPublish, "KEY_t_ask_response_event_publish_UK_ASKRESP__PUBLISH_EVENTID", AskResponseEventPublishTable.askResponseEventPublish.EVENTID);
        public static final UniqueKey<EventProcessRecord> KEY_T_EVENT_PROCESS_PRIMARY = createUniqueKey(EventProcessTable.eventProcess, "KEY_t_event_process_PRIMARY", EventProcessTable.eventProcess.ID);
        public static final UniqueKey<EventProcessRecord> KEY_T_EVENT_PROCESS_EVENTID = createUniqueKey(EventProcessTable.eventProcess, "KEY_t_event_process_eventId", EventProcessTable.eventProcess.EVENTID);
        public static final UniqueKey<EventWatchRecord> KEY_T_EVENT_WATCH_PRIMARY = createUniqueKey(EventWatchTable.eventWatch, "KEY_t_event_watch_PRIMARY", EventWatchTable.eventWatch.ID);
        public static final UniqueKey<EventWatchProcessRecord> KEY_T_EVENT_WATCH_PROCESS_PRIMARY = createUniqueKey(EventWatchProcessTable.eventWatchProcess, "KEY_t_event_watch_process_PRIMARY", EventWatchProcessTable.eventWatchProcess.ID);
        public static final UniqueKey<NotifyEventPublishRecord> KEY_T_NOTIFY_EVENT_PUBLISH_PRIMARY = createUniqueKey(NotifyEventPublishTable.notifyEventPublish, "KEY_t_notify_event_publish_PRIMARY", NotifyEventPublishTable.notifyEventPublish.ID);
        public static final UniqueKey<NotifyEventPublishRecord> KEY_T_NOTIFY_EVENT_PUBLISH_UK_NOTIFY__PUBLISH_EVENTID = createUniqueKey(NotifyEventPublishTable.notifyEventPublish, "KEY_t_notify_event_publish_UK_NOTIFY__PUBLISH_EVENTID", NotifyEventPublishTable.notifyEventPublish.EVENTID);
        public static final UniqueKey<RevokeAskEventPublishRecord> KEY_T_REVOKE_ASK_EVENT_PUBLISH_PRIMARY = createUniqueKey(RevokeAskEventPublishTable.revokeAskEventPublish, "KEY_t_revoke_ask_event_publish_PRIMARY", RevokeAskEventPublishTable.revokeAskEventPublish.ID);
        public static final UniqueKey<RevokeAskEventPublishRecord> KEY_T_REVOKE_ASK_EVENT_PUBLISH_UK_REVOKEASK__PUBLISH_EVENTID = createUniqueKey(RevokeAskEventPublishTable.revokeAskEventPublish, "KEY_t_revoke_ask_event_publish_UK_REVOKEASK__PUBLISH_EVENTID", RevokeAskEventPublishTable.revokeAskEventPublish.EVENTID);
    }
}
