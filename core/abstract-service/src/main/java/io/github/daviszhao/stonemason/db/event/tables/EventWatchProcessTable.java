/*
 * This file is generated by jOOQ.
 */
package io.github.daviszhao.stonemason.db.event.tables;


import io.github.daviszhao.stonemason.busEvent.constants.ProcessStatus;
import io.github.daviszhao.stonemason.busEvent.payloads.FailureInfo;
import io.github.daviszhao.stonemason.db.base.utils.JsonObjectsConverter;
import io.github.daviszhao.stonemason.db.event.Keys;
import io.github.daviszhao.stonemason.db.event.tables.records.EventWatchProcessRecord;
import org.jooq.*;
import org.jooq.impl.EnumConverter;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EventWatchProcessTable extends TableImpl<EventWatchProcessRecord> {

    /**
     * The reference instance of <code>user.t_event_watch_process</code>
     */
    public static final EventWatchProcessTable EVENT_WATCH_PROCESS = new EventWatchProcessTable();
    private static final long serialVersionUID = -1677021889;
    /**
     * The column <code>user.t_event_watch_process.id</code>.
     */
    public final TableField<EventWatchProcessRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>user.t_event_watch_process.watchId</code>.
     */
    public final TableField<EventWatchProcessRecord, Integer> WATCHID = createField("watchId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>user.t_event_watch_process.status</code>. 'NEW','PROCESSED','IGNORE'
     */
    public final TableField<EventWatchProcessRecord, ProcessStatus> STATUS = createField("status", SQLDataType.VARCHAR.length(20).nullable(false), this, "'NEW','PROCESSED','IGNORE'", new EnumConverter<>(String.class, ProcessStatus.class));
    /**
     * The column <code>user.t_event_watch_process.failureInfo</code>.
     */
    public final TableField<EventWatchProcessRecord, FailureInfo> FAILUREINFO = createField("failureInfo", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "", new JsonObjectsConverter<>(FailureInfo.class));
    /**
     * The column <code>user.t_event_watch_process.version</code>.
     */
    public final TableField<EventWatchProcessRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");
    public final TableField<EventWatchProcessRecord, LocalDateTime> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");
    public final TableField<EventWatchProcessRecord, LocalDateTime> UPDATETIME = createField("updateTime", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>user.t_event_watch_process</code> table reference
     */
    public EventWatchProcessTable() {
        this("t_event_watch_process", null);
    }

    /**
     * Create an aliased <code>user.t_event_watch_process</code> table reference
     */
    public EventWatchProcessTable(String alias) {
        this(alias, EVENT_WATCH_PROCESS);
    }

    private EventWatchProcessTable(String alias, Table<EventWatchProcessRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventWatchProcessTable(String alias, Table<EventWatchProcessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this eventType
     */
    @Override
    public Class<EventWatchProcessRecord> getRecordType() {
        return EventWatchProcessRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EventWatchProcessRecord, Integer> getIdentity() {
        return Keys.IDENTITY_eventWatchProcess;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventWatchProcessRecord> getPrimaryKey() {
        return Keys.KEY_T_EVENT_WATCH_PROCESS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventWatchProcessRecord>> getKeys() {
        return Arrays.<UniqueKey<EventWatchProcessRecord>>asList(Keys.KEY_T_EVENT_WATCH_PROCESS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventWatchProcessTable as(String alias) {
        return new EventWatchProcessTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventWatchProcessTable rename(String name) {
        return new EventWatchProcessTable(name, null);
    }
}
